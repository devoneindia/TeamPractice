// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewSchool.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NewSchool.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20240124172109_InitialCreateTable")]
    partial class InitialCreateTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NewSchool.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StudentRecord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("student_record");

                    b.Property<string>("TeacherRecord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("teacher_record");

                    b.HasKey("Id");

                    b.ToTable("school");
                });

            modelBuilder.Entity("NewSchool.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blood_group");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("father_name");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("section");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("student");
                });

            modelBuilder.Entity("NewSchool.Models.Teacher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blood_group");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("section");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
